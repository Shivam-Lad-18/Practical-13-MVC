@model Task1.Models.Employee

@{
    ViewBag.Title = "Create";
}

<h2 class="text-primary mb-4">Create Employee</h2>

@using (Html.BeginForm("Create", "Home", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()

    <div class="card shadow p-4 mb-4 bg-light rounded">
        <div class="card-body">
            <h4 class="card-title">Employee Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

            <div class="mb-3">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter full name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.DOB, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter age" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>

            <div class="d-flex justify-content-between mt-4">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
